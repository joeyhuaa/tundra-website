{"version":3,"sources":["components/Navigation.js","components/ArtistPanel.js","img/eric-prof-pic.jpg","img/wasteland-prof-pic.png","components/ArtistPage.js","components/HomePage.js","components/Services.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","id","forceRefresh","to","size","ArtistPanel","name","bgImg","bgColor","panelClicked","useState","hover","setHover","isLaptop","useMediaQuery","query","laptopHoverStyles","identifier","backgroundColor","animation","webkitAnimation","color","className","onClick","onMouseEnter","onMouseLeave","style","backgroundImage","toUpperCase","artists","wastelandProfPic","blurb","ericProfPic","ArtistPage","props","match","params","artist","find","a","HomePage","artistPanelClicked","map","Services","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppWithRouter","withRouter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50afb498.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../styles/Nav.css'\nimport {GiHamburgerMenu} from 'react-icons/gi'\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\n\nexport default function Navigation() {\n  return (\n    <div id='nav'>\n      <Router forceRefresh={true}>\n        <h1 id='title'>\n          <Link to='/'>TUNDRA RECORDS</Link>\n        </h1>\n        <ul id='options'>\n          <Link to='/services'>SERVICES</Link>\n          <Link to='/merch'>MERCH</Link>\n          <Link to='/tours'>TOURS</Link>\n        </ul>\n      </Router>\n      <div id='hamburger'>\n        <GiHamburgerMenu size='2em' />\n      </div>\n    </div>\n  )\n}\n\n","import React, {useState, useEffect} from 'react'\nimport {useMediaQuery} from 'react-responsive'\nimport '../styles/ArtistPanel.css'\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\n\nexport default function ArtistPanel({\n  name,\n  bgColor,\n  bgImg,\n  panelClicked\n}) {\n  let [hover, setHover] = useState(false)\n  let isLaptop = useMediaQuery({query: '(min-width: 992px)'})\n\n  let laptopHoverStyles = (identifier) => {\n    // styles to be used\n    let styles = {\n      'name-container': {\n        backgroundColor: 'white',\n        animation: 'fadein 1.5s forwards',\n        webkitAnimation: 'fadein 1.5s forwards',\n      },\n      'name': {\n        color: 'black'\n      }\n    }\n\n    // logic\n    if (isLaptop) {\n      if (hover) return styles[identifier]\n      else return null\n    } else return null\n  }\n\n  return (\n    <Router forceRefresh={true}>\n      <Link \n        to={`/artist/${name}`}\n        className='artist-panel' \n        onClick={panelClicked}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        <div className='bg-img' style={{backgroundImage: `url(${bgImg})`}} />\n        <div \n          className='name-container'\n          style={laptopHoverStyles('name-container')}\n        >\n          <p \n            className='name' \n            style={laptopHoverStyles('name')}\n          >{name.toUpperCase()}</p>\n        </div>\n      </Link>\n    </Router>\n  )\n}","export default __webpack_public_path__ + \"static/media/eric-prof-pic.0bd8be20.jpg\";","export default __webpack_public_path__ + \"static/media/wasteland-prof-pic.e60ab7ce.png\";","import React, {useState, useEffect} from 'react';\nimport '../styles/ArtistPage.css';\nimport ericProfPic from '../img/eric-prof-pic.jpg'\nimport wastelandProfPic from '../img/wasteland-prof-pic.png'\n\nlet artists = [\n  {\n    name: 'Wasteland Doctor',\n    bgColor: '#09132D',\n    bgImg: wastelandProfPic,\n    blurb: \"The doctor himself. He's legally obligated to tell you that he's not a real doctor.\"\n  },\n  {\n    name: 'Eric Biggs the Lyricist',\n    bgColor: '#2F642E',\n    bgImg: ericProfPic,\n    blurb: \"He will murder you with his multisyllabics. A real lyrical assassin.\"\n  },\n  {\n    name: 'Brain Chemist',\n    bgColor: '#781818',\n    bgImg: null,\n    blurb: \"He loves mixing chemical substances inside his cranium. Turns thought patterns into sound waves.\"\n  }\n]\n\nexport default function ArtistPage(props) {\n  let name = props.match.params.name\n  let artist = artists.find(a => a.name === name)\n  return (\n    <div id='container'>\n      <div \n        className='info'\n        style={{\n          backgroundImage: `url(${artist.bgImg})`\n        }}\n      >\n        <h1 className='title' style={{color: 'white'}}>{name}</h1>\n        <p className='blurb'>{artist.blurb}</p>\n      </div>\n      <div className='releases'>\n        <h1 className='title'>Releases</h1>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect} from 'react';\nimport '../styles/HomePage.css'\nimport ArtistPanel from './ArtistPanel'\nimport ArtistPage from './ArtistPage';\nimport ericProfPic from '../img/eric-prof-pic.jpg'\nimport wastelandProfPic from '../img/wasteland-prof-pic.png'\n\n// use firebase or something? to manage data like\n// artists\n// releases\n\nlet artists = [\n  {\n    name: 'Wasteland Doctor',\n    bgColor: '#09132D',\n    bgImg: wastelandProfPic\n  },\n  {\n    name: 'Eric Biggs the Lyricist',\n    bgColor: '#2F642E',\n    bgImg: ericProfPic\n  },\n  {\n    name: 'Brain Chemist',\n    bgColor: '#781818',\n    bgImg: null\n  }\n]\n\nexport default function HomePage({\n  // artists\n}) {\n  let [state, setState] = useState({\n  })\n\n  let artistPanelClicked = () => {\n  }\n\n  return (\n    <div id='container'>\n      {\n        artists.map(artist => (\n          <ArtistPanel\n            key={artist.name}\n            name={artist.name}\n            bgColor={artist.bgColor}\n            bgImg={artist.bgImg}\n            panelClicked={artistPanelClicked}\n          />\n        ))\n      }\n    </div>\n  )\n}","import React from 'react'\n\nexport default function Services() {\n  return (\n    <div id='container'>\n      <h1>Services</h1>\n    </div>\n  )\n}","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Navigation from './components/Navigation'\nimport HomePage from './components/HomePage'\nimport ArtistPanel from './components/ArtistPanel';\nimport ArtistPage from './components/ArtistPage';\nimport Services from './components/Services'\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n\n  return (\n    <div className='App'>\n      <Navigation />\n\n      <Switch>\n        <Route path='/services' component={Services} />\n        <Route path='/artist/:name' component={ArtistPage} />\n        <Route path='/' component={HomePage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router, withRouter} from \"react-router-dom\";\n\nlet AppWithRouter = withRouter(App)\n\nReactDOM.render(\n  <Router forceRefresh={true}>\n    <React.StrictMode>\n      <AppWithRouter />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}